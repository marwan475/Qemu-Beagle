#!/bin/sh
#
# see: dh_installdeb(1)

set -e

package="bb-node-red-installer"

pkg_user="node-red"
pkg_data_dir="/var/lib/node-red"

# Create node-red user with home in /var/lib
echo "Creating/updating ${pkg_user} user account..."
adduser --system --home /var/lib/node-red --gecos "${pkg_user} user" --shell /bin/sh \
	--quiet --disabled-password --group ${pkg_user} || {
echo "Proceeding with existing ${pkg_user} user..."
  }

# Give node_red_user ownership of node_red_data_dir
chown ${pkg_user} ${pkg_data_dir}

groupadd gpio --system || true

echo "Updating ${pkg_user} user to group gpio"
usermod -a -G gpio ${pkg_user}

echo "Updating ${pkg_user} user to group dialout"
usermod -a -G dialout ${pkg_user}

main_install () {
	if [ -d /etc/avahi/services/ ] ; then
		#Annouce http server via DNS Sevice Discovery
		wfile="/etc/avahi/services/nodered.service"
		echo "<?xml version=\"1.0\" standalone='no'?><!--*-nxml-*-->" > ${wfile}
		echo "<!DOCTYPE service-group SYSTEM \"avahi-service.dtd\">" >> ${wfile}
		echo "" >> ${wfile}
		echo "<!-- See avahi.service(5) for more information about this configuration file -->" >> ${wfile}
		echo "" >> ${wfile}
		echo "<service-group>" >> ${wfile}
		echo "" >> ${wfile}
		echo "  <name replace-wildcards=\"yes\">Node-RED for %h</name>" >> ${wfile}
		echo "  <service>" >> ${wfile}
		echo "" >> ${wfile}
		echo "    <type>_http._tcp</type>" >> ${wfile}
		echo "    <port>1880</port>" >> ${wfile}
		echo "  </service>" >> ${wfile}
		echo "" >> ${wfile}
		echo "</service-group>" >> ${wfile}
		chown -R root:root ${wfile}
	fi
	echo "${package}:Installed"

	chmod +x /opt/node-red/bin/corepack
	chmod +x /opt/node-red/bin/node-red
	chmod +x /opt/node-red/bin/node-red-pi
	chmod +x /opt/node-red/bin/npm
	chmod +x /opt/node-red/bin/npx

	sed -i -e 's:env node:env /opt/node-red/bin/node:g' /opt/node-red/lib/node_modules/corepack/dist/corepack.js
	sed -i -e 's:env node:env /opt/node-red/bin/node:g' /opt/node-red/lib/node_modules/node-red/red.js
	sed -i -e 's:env node:env /opt/node-red/bin/node:g' /opt/node-red/lib/node_modules/node-red/bin/node-red-pi
	sed -i -e 's:env node:env /opt/node-red/bin/node:g' /opt/node-red/lib/node_modules/npm/bin/npm-cli.js
	sed -i -e 's:env node:env /opt/node-red/bin/node:g' /opt/node-red/lib/node_modules/npm/bin/npx-cli.js
}

case "$1" in
    configure)
	main_install
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_systemd_enable/13.11.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if deb-systemd-helper debian-installed 'nodered.service'; then
		# The following line should be removed in trixie or trixie+1
		deb-systemd-helper unmask 'nodered.service' >/dev/null || true

		if deb-systemd-helper --quiet was-enabled 'nodered.service'; then
			# Create new symlinks, if any.
			deb-systemd-helper enable 'nodered.service' >/dev/null || true
		fi
	fi

	# Update the statefile to add new symlinks (if any), which need to be cleaned
	# up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'nodered.service' >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit/13.11.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -x "/etc/init.d/nodered" ]; then
		update-rc.d nodered defaults >/dev/null || exit 1
	fi
fi
# End automatically added section


exit 0

